env:
  - ENV=release
#  - ENV=test TESTS=seq
#  - ENV=test TESTS=random

before_install:
  # Parallel download
  - mvn > /dev/null &
  - sudo apt-get install aria2 -y
  #- sudo ./travis/update.sh > /dev/null &

  # Retrieves and extracts the DB2 binaries
  - cd /tmp ; aria2c -x 16 https://delivery04.dhe.ibm.com/sdfdl/v2/sar/CM/IM/04jdl/0/Xa.2/Xb.jusyLTSp44S03Ud2hqNz8SvywlJcj6dHjPURNh0iCvzE79MnIkpREqrUv_U/Xc.CM/IM/04jdl/0/v10.5fp3a_linuxx64_server.tar.gz/Xd./Xf.LPR.D1vk/Xg.7708245/Xi.habanero/XY.habanero/XZ.6Ndokz98qNHthR6iSKORF6OAY0c/v10.5fp3a_linuxx64_server.tar.gz ; tar zxf v10.5fp3a_linuxx64_server.tar.gz

  # Retrieves and extract log4db2
  - cd ; wget https://github.com/angoca/log4db2/releases/download/log4db2-1-Beta-A/log4db2.tar.gz ; tar zxvf log4db2.tar.gz


  # INSTALL

  # Install the required libraries
  - sudo apt-get update -qq
  - sudo apt-get install lib32stdc++6 -y
#  - sudo apt-get -y install libaio1 ksh libstdc++6-4.4-dev libstdc++6-4.4-pic libstdc++5 rpm
#  - sudo apt-get install ia32-libs-multiarc ]
  - sudo apt-get install -qq libpam-ldap:i386
  - sudo apt-get install libpam-modules:i386
  - sudo apt-get -y install libpam0g:i386
#  - sudo ln -s /lib/i386-linux-gnu/libpam.so.0 /lib/libpam.so.0
#  - sudo apt-get install numactl

  # Checks the prerequisites
  - cd /tmp/server ; ./db2prereqcheck -i
  # Install DB2 and creates an instance (Response file)
  - sudo ./db2setup -r ${TRAVIS_BUILD_DIR}/travis/db2.rsp || cat /tmp/db2setup.log
  # Changes the security
  - sudo usermod -a -G db2iadm1 $USER
  - sudo su - db2inst1 -c "db2 update dbm cfg using SYSADM_GROUP db2iadm1 ; db2stop ; db2start"
  # Creates the database
  - sudo su - db2inst1 -c "db2 create db db2unit ; db2 connect to db2unit ; db2 grant dbadm on database to user $USER"
  - . ~db2inst1/sqllib/db2profile

install:
  # Install log4db2
  - cd ; cd log4db2 ; . ./install

  # Install db2unit
  - cd ${TRAVIS_BUILD_DIR}
  - bash -c "if [ '$ENV' = 'release' ]; then mvn ; db2 connect to db2unit ; cd target/db2unit/db2unit ; . ./install ; fi"
  - bash -c "if [ '$ENV' = 'test' ]; then db2 connect to db2unit ; cd src/test/scripts ; . ./init-dev ; cd ../../main/scripts ; . ./install ; fi"
  - cd src/test/scripts ; . ./init-dev
  - db2 "CREATE TABLESPACE SYSTOOLSPACE IN IBMCATGROUP MANAGED BY AUTOMATIC STORAGE USING STOGROUP IBMSTOGROUP EXTENTSIZE 4"
  - bash -c "if [ '$TESTS' = 'random' ]; then db2 connect to db2unit ; . ./test ; fi" x DB2UNIT_EMPTY i
  - bash -c "if [ '$TESTS' = 'random' ]; then db2 connect to db2unit ; . ./test ; fi" x DB2UNIT_EXECUTION i
  - bash -c "if [ '$TESTS' = 'random' ]; then db2 connect to db2unit ; . ./test ; fi" x DB2UNIT_ASSERTIONS i
  - bash -c "if [ '$TESTS' = 'seq' ]; then cd ../sql-pl ; fi"

  # Install the tests
  - bash -c "if [ '$TESTS' = 'seq' ]; then db2 connect to db2unit ; db2 -tf Tests_DB2UNIT_EMPTY.sql ; fi"
  - bash -c "if [ '$TESTS' = 'seq' ]; then db2 connect to db2unit ; db2 -tf Tests_DB2UNIT_EXECUTION.sql ; fi"
  - bash -c "if [ '$TESTS' = 'seq' ]; then db2 connect to db2unit ; db2 -tf Tests_DB2UNIT_ASSERTIONS.sql ; fi"

script:
  - bash -c "if [ '$TESTS' = 'seq' ]; then db2 connect to db2unit ; db2 -r /tmp/db2unit.output \"call db2unit.run_suite('DB2UNIT_EMPTY')\"      ; bash -c \"exit \$(tail -1 /tmp/db2unit.output | awk '/Return Status/ {print $4}')\"; fi"
  - bash -c "if [ '$TESTS' = 'seq' ]; then db2 connect to db2unit ; db2 -r /tmp/db2unit.output \"call db2unit.run_suite('DB2UNIT_EXECUTION')\"  ; bash -c \"exit \$(tail -1 /tmp/db2unit.output | awk '/Return Status/ {print $4}')\"; fi"
  - bash -c "if [ '$TESTS' = 'seq' ]; then db2 connect to db2unit ; db2 -r /tmp/db2unit.output \"call db2unit.run_suite('DB2UNIT_ASSERTIONS')\" ; bash -c \"exit \$(tail -1 /tmp/db2unit.output | awk '/Return Status/ {print $4}')\"; fi"

  - bash -c "if [ '$TESTS' = 'random' ]; then db2 connect to db2unit ; . ./allTests ; fi" x "-np"

after_failure:
  # If there is any error, shows the logs
  - cat /home/db2inst1/sqllib/db2dump/db2diag.log
  - db2 "call logadmin.logs"
  - db2 "select * from DB2UNIT_1.DB2UNIT_EXECUTION_REPORTS"
  - db2 "select * from DB2UNIT_EMPTY.REPORT_TESTS"
  - db2 "select * from DB2UNIT_EXECUTION.REPORT_TESTS"
  - db2 "select * from DB2UNIT_ASSERTIONS.REPORT_TESTS"

