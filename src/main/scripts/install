# This file is part of db2unit: A unit testing framework for DB2 LUW.
# Copyright (C)  2014  Andres Gomez Casanova (@AngocA)
#
# db2unit is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# db2unit is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Andres Gomez Casanova <angocaATyahooDOTcom>

# Installs all scripts of the utility.
#
# Version: 2014-04-30 V2_BETA
# Author: Andres Gomez Casanova (AngocA)
# Made in COLOMBIA.

# Global variables
export continue=true
export adminInstall=true

# Installs a given script.
# It uses the continue global variable to stop the execution if an error occurs.
installScript() {
 script=${1}
 echo $script
 db2 -tsf ${script}
 if [ ${?} -ne 0 ] ; then
  export continue=false
 fi
 unset script
}

# Function that installs the utility.
install() {
 local  __retInstall=$1
 echo "Checking prerequisites"

 [ ${continue} = true ] && installScript ${DB2UNIT_SRC_MAIN_CODE_PATH}/00-Prereqs.sql
 echo "Installing utility"
 if [ ${adminInstall} = true ] ; then
  [ ${continue} = true ] && installScript ${DB2UNIT_SRC_MAIN_CODE_PATH}/01-ObjectsAdmin.sql
 fi
 [ ${continue} = true ] && installScript ${DB2UNIT_SRC_MAIN_CODE_PATH}/02-Objects.sql
 [ ${continue} = true ] && installScript ${DB2UNIT_SRC_MAIN_CODE_PATH}/03-Headers.sql
 [ ${continue} = true ] && installScript ${DB2UNIT_SRC_MAIN_CODE_PATH}/04-Body.sql
 [ ${continue} = true ] && installScript ${DB2UNIT_SRC_MAIN_CODE_PATH}/05-Asserts.sql
 [ ${continue} = true ] && installScript ${DB2UNIT_SRC_MAIN_CODE_PATH}/06-AssertsNoMessage.sql
 [ ${continue} = true ] && installScript ${DB2UNIT_SRC_MAIN_CODE_PATH}/07-XMLReport.sql
 [ ${continue} = true ] && installScript ${DB2UNIT_SRC_MAIN_CODE_PATH}/08-Version.sql

 local  myRetInstall=${continue}
 eval $__retInstall="'${myRetInstall}'"
}

# This function checks the parameter and assign it to a global variable.
checkParam() {
 param1=${1}
 if [ "${param1}" = "-A" ] ; then
  export adminInstall=false
 fi
}

# Main function that starts the installation.
init() {
 local  __retInit=$1

 # Initialize the environment.
 if [ -x init ] ; then
  . ./init
 fi

 echo "db2unit is licensed under the terms of the GNU General Public License v3.0"

 # Check the given parameters.
 checkParam ${2}

 install retInstall

 echo "Please visit the wiki to learn how to use and configure this utility"
 echo "https://github.com/angoca/db2unit/wiki"
 echo "To report an issue or provide feedback, please visit:"
 echo "https://github.com/angoca/db2unit/issues"
 echo
 if [ ${retInstall} = "true" ] ; then
  echo "db2unit was successfully installed"
  db2 -x "values 'Database: ' || current server"
  db2 -x "values 'Version: ' || db2unit.version"
  db2 -x "select 'Schema: ' || base_moduleschema from syscat.modules where moduleschema = 'SYSPUBLIC' and modulename = 'DB2UNIT'"
  retValue=0
 else
  echo "Check the ERROR(s) and reinstall the utility"
  echo "For more information visit check the FAQs:"
  echo "https://github.com/angoca/db2unit/wiki/FAQs"
  echo "You can also check the install guide:"
  echo "https://github.com/angoca/db2unit/wiki/Install"
  retValue=1
 fi
 unset continue

 # Clean environment.
 if [ -x uninit ] ; then
  . ./uninit
 fi

 local  myRetInit=${retValue}
 eval $__retInit="'${myRetInit}'"
}

# Checks if there is already a connection established
db2 values current date > /dev/null
if [ ${?} -eq 0 ] ; then
 init ret ${1}
else
 echo "Please connect to a database before the execution of the installation."
 echo "Remember that to call the script the command is '. ./install'"
 ret=2
fi
unset continue

return ${ret}

