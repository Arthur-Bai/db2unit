--#SET TERMINATOR @

/*
 This file is part of db2unit: A unit testing framework for Db2 LUW.
 Copyright (C)  2014  Andres Gomez Casanova (@AngocA)

 db2unit is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 db2unit is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>.

 Andres Gomez Casanova <angocaATyahooDOTcom>
*/

SET CURRENT SCHEMA DB2UNIT_ASSERTIONS_BOOLEAN @

SET PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM", DB2UNIT_2_BETA, DB2UNIT_ASSERTIONS_BOOLEAN @

/**
 * Tests for boolean assertions.
 *
 * Version: 2014-05-01 1
 * Author: Andres Gomez Casanova (AngocA)
 * Made in COLOMBIA.
 */

-- Previously create the table in order to compile these tests.
BEGIN
 DECLARE STATEMENT VARCHAR(128);
 DECLARE CONTINUE HANDLER FOR SQLSTATE '42710' BEGIN END;
 SET STATEMENT = 'CREATE TABLE REPORT_TESTS LIKE DB2UNIT_2_BETA.REPORT_TESTS';
 EXECUTE IMMEDIATE STATEMENT;
END @

ALTER TABLE DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS
  ALTER COLUMN SUITE_NAME
  SET WITH DEFAULT 'DB2UNIT_ASSERTIONS_BOOLEAN' @

-- BOOLEAN

-- Tests that no message is inserted in the report when two booleans are equals
-- in assert_equals.
CREATE OR REPLACE PROCEDURE TEST_BOOLEAN_01()
 BEGIN
  DECLARE ACTUAL_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
  DECLARE EXPECTED_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
  DECLARE BOOL_1 BOOLEAN;
  DECLARE BOOL_2 BOOLEAN;

  SET EXPECTED_MSG = 'Message check';
  INSERT INTO DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS (DATE, EXECUTION_ID,
    TEST_NAME, MESSAGE) VALUES (CURRENT TIMESTAMP, 0, '', EXPECTED_MSG);
  SET BOOL_1 = TRUE;
  SET BOOL_2 = TRUE;
  CALL DB2UNIT.ASSERT_BOOLEAN_EQUALS(BOOL_1, BOOL_2);
  SELECT MESSAGE INTO ACTUAL_MSG
    FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS
    WHERE DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS);

  DELETE FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS
    WHERE EXECUTION_ID = 0
    AND MESSAGE = EXPECTED_MSG
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS);

  CALL DB2UNIT.ASSERT_STRING_EQUALS(EXPECTED_MSG, ACTUAL_MSG);
 END@

-- Test both booleans as null in assert_equals.
CREATE OR REPLACE PROCEDURE TEST_BOOLEAN_02()
 BEGIN
  DECLARE ACTUAL_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
  DECLARE EXPECTED_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
  DECLARE BOOL_1 BOOLEAN;
  DECLARE BOOL_2 BOOLEAN;

  SET EXPECTED_MSG = 'Message check';
  INSERT INTO DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS (DATE, EXECUTION_ID,
    TEST_NAME, MESSAGE) VALUES (CURRENT TIMESTAMP, 0, '', EXPECTED_MSG);
  SET BOOL_1 = NULL;
  SET BOOL_2 = NULL;
  CALL DB2UNIT.ASSERT_BOOLEAN_EQUALS(BOOL_1, BOOL_2);
  CALL DB2UNIT.BACK_TO_EXECUTING();

  SELECT MESSAGE INTO ACTUAL_MSG
    FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS
    WHERE DATE = (SELECT MAX(DATE)
      FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS);

  DELETE FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS
    WHERE EXECUTION_ID = 0
    AND MESSAGE = EXPECTED_MSG
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS);

  CALL DB2UNIT.ASSERT_STRING_EQUALS(EXPECTED_MSG, ACTUAL_MSG);
 END@

-- Test two different booleans with same data type in assert_equals.
CREATE OR REPLACE PROCEDURE TEST_BOOLEAN_03()
 BEGIN
  DECLARE ACTUAL_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
  DECLARE EXPECTED_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
  DECLARE BOOL_1 BOOLEAN;
  DECLARE BOOL_2 BOOLEAN;

  SET EXPECTED_MSG = 'The value of both booleans is different';
  SET BOOL_1 = TRUE;
  SET BOOL_2 = FALSE;
  CALL DB2UNIT.ASSERT_BOOLEAN_EQUALS(BOOL_1, BOOL_2);
  CALL DB2UNIT.BACK_TO_EXECUTING();

  DELETE FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS
    WHERE MESSAGE = 'Actual  : "FALSE"'
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS);
  DELETE FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS
    WHERE MESSAGE = 'Expected: "TRUE "'
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS);

  SELECT MESSAGE INTO ACTUAL_MSG
    FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS
    WHERE DATE = (SELECT MAX(DATE)
      FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS);

  DELETE FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS
    WHERE MESSAGE = EXPECTED_MSG
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS);
  DELETE FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS
    WHERE MESSAGE = 'BOOLEAN_EQUALS'
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS);

  CALL DB2UNIT.ASSERT_STRING_EQUALS(EXPECTED_MSG, ACTUAL_MSG);
 END@

-- Test first boolean as null in assert_equals.
CREATE OR REPLACE PROCEDURE TEST_BOOLEAN_04()
 BEGIN
  DECLARE ACTUAL_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
  DECLARE EXPECTED_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
  DECLARE BOOL_1 BOOLEAN;
  DECLARE BOOL_2 BOOLEAN;

  SET EXPECTED_MSG = 'Nullability difference';
  SET BOOL_1 = NULL;
  SET BOOL_2 = FALSE;
  CALL DB2UNIT.ASSERT_BOOLEAN_EQUALS(BOOL_1, BOOL_2);
  CALL DB2UNIT.BACK_TO_EXECUTING();

  DELETE FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS
    WHERE MESSAGE = 'Actual  : "FALSE"'
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS);
  DELETE FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS
    WHERE MESSAGE = 'Expected: NULL'
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS);

  SELECT MESSAGE INTO ACTUAL_MSG
    FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS
    WHERE DATE = (SELECT MAX(DATE)
      FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS);

  DELETE FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS
    WHERE MESSAGE = EXPECTED_MSG
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS);
  DELETE FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS
    WHERE MESSAGE = 'BOOLEAN_EQUALS'
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS);

  CALL DB2UNIT.ASSERT_STRING_EQUALS(EXPECTED_MSG, ACTUAL_MSG);
 END@

-- Test second boolean as null in assert_equals.
CREATE OR REPLACE PROCEDURE TEST_BOOLEAN_05()
 BEGIN
  DECLARE ACTUAL_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
  DECLARE EXPECTED_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
  DECLARE BOOL_1 BOOLEAN;
  DECLARE BOOL_2 BOOLEAN;

  SET EXPECTED_MSG = 'Nullability difference';
  SET BOOL_1 = TRUE;
  SET BOOL_2 = NULL;
  CALL DB2UNIT.ASSERT_BOOLEAN_EQUALS(BOOL_1, BOOL_2);
  CALL DB2UNIT.BACK_TO_EXECUTING();

  DELETE FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS
    WHERE MESSAGE = 'Actual  : NULL'
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS);
  DELETE FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS
    WHERE MESSAGE = 'Expected: "TRUE "'
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS);

  SELECT MESSAGE INTO ACTUAL_MSG
    FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS
    WHERE DATE = (SELECT MAX(DATE)
      FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS);

  DELETE FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS
    WHERE MESSAGE = EXPECTED_MSG
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS);
  DELETE FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS
    WHERE MESSAGE = 'BOOLEAN_EQUALS'
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS);

  CALL DB2UNIT.ASSERT_STRING_EQUALS(EXPECTED_MSG, ACTUAL_MSG);
 END@

-- Test the assert_true to true.
CREATE OR REPLACE PROCEDURE TEST_BOOLEAN_06()
 BEGIN
  DECLARE ACTUAL_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
  DECLARE EXPECTED_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
  DECLARE VALUE BOOLEAN;

  SET EXPECTED_MSG = 'Message check';
  INSERT INTO DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS (DATE, EXECUTION_ID,
    TEST_NAME, MESSAGE) VALUES (CURRENT TIMESTAMP, 0, '', EXPECTED_MSG);
  SET VALUE = TRUE;
  CALL DB2UNIT.ASSERT_BOOLEAN_TRUE(VALUE);
  CALL DB2UNIT.BACK_TO_EXECUTING();

  SELECT MESSAGE INTO ACTUAL_MSG
    FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS
    WHERE DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS);

  CALL DB2UNIT.ASSERT_STRING_EQUALS(EXPECTED_MSG, ACTUAL_MSG);
  DELETE FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS
    WHERE EXECUTION_ID = 0
    AND MESSAGE = EXPECTED_MSG
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS);
 END @

-- Test the assert_true to false.
CREATE OR REPLACE PROCEDURE TEST_BOOLEAN_07()
 BEGIN
  DECLARE ACTUAL_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
  DECLARE EXPECTED_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
  DECLARE VALUE BOOLEAN;

  SET EXPECTED_MSG = 'The given value is "FALSE"';
  SET VALUE = FALSE;
  CALL DB2UNIT.ASSERT_BOOLEAN_TRUE(VALUE);
  CALL DB2UNIT.BACK_TO_EXECUTING();

  SELECT MESSAGE INTO ACTUAL_MSG
    FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS
    WHERE DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS);

  DELETE FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS
    WHERE MESSAGE = EXPECTED_MSG
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS);
  DELETE FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS
    WHERE MESSAGE = 'BOOLEAN_TRUE'
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS);

  CALL DB2UNIT.ASSERT_STRING_EQUALS(EXPECTED_MSG, ACTUAL_MSG);
 END @

-- Test the assert_false to false.
CREATE OR REPLACE PROCEDURE TEST_BOOLEAN_08()
 BEGIN
  DECLARE ACTUAL_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
  DECLARE EXPECTED_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
  DECLARE VALUE BOOLEAN;

  SET EXPECTED_MSG = 'Message check';
  INSERT INTO DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS (DATE, EXECUTION_ID,
    TEST_NAME, MESSAGE) VALUES (CURRENT TIMESTAMP, 0, '', EXPECTED_MSG);
  SET VALUE = FALSE;
  CALL DB2UNIT.ASSERT_BOOLEAN_FALSE(VALUE);
  CALL DB2UNIT.BACK_TO_EXECUTING();

  SELECT MESSAGE INTO ACTUAL_MSG
    FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS
    WHERE DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS);

  CALL DB2UNIT.ASSERT_STRING_EQUALS(EXPECTED_MSG, ACTUAL_MSG);
  DELETE FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS
    WHERE EXECUTION_ID = 0
    AND MESSAGE = EXPECTED_MSG
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS);
 END @

-- Test the assert_false to true.
CREATE OR REPLACE PROCEDURE TEST_BOOLEAN_09()
 BEGIN
  DECLARE ACTUAL_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
  DECLARE EXPECTED_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
  DECLARE VALUE BOOLEAN;

  SET EXPECTED_MSG = 'The given value is "TRUE"';
  SET VALUE = TRUE;
  CALL DB2UNIT.ASSERT_BOOLEAN_FALSE(VALUE);
  CALL DB2UNIT.BACK_TO_EXECUTING();

  SELECT MESSAGE INTO ACTUAL_MSG
    FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS
    WHERE DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS);

  DELETE FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS
    WHERE MESSAGE = EXPECTED_MSG
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS);
  DELETE FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS
    WHERE MESSAGE = 'BOOLEAN_FALSE'
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS);

  CALL DB2UNIT.ASSERT_STRING_EQUALS(EXPECTED_MSG, ACTUAL_MSG);
 END @

-- Test the assert_boolean_null with null.
CREATE OR REPLACE PROCEDURE TEST_BOOLEAN_10()
 BEGIN
  DECLARE ACTUAL_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
  DECLARE EXPECTED_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
  DECLARE VALUE BOOLEAN;

  SET EXPECTED_MSG = 'Message check';
  INSERT INTO DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS (DATE, EXECUTION_ID,
    TEST_NAME, MESSAGE) VALUES (CURRENT TIMESTAMP, 0, '', EXPECTED_MSG);
  SET VALUE = NULL;
  CALL DB2UNIT.ASSERT_BOOLEAN_NULL(VALUE);
  CALL DB2UNIT.BACK_TO_EXECUTING();

  SELECT MESSAGE INTO ACTUAL_MSG
    FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS
    WHERE DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS);

  CALL DB2UNIT.ASSERT_STRING_EQUALS(EXPECTED_MSG, ACTUAL_MSG);
  DELETE FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS
    WHERE EXECUTION_ID = 0
    AND MESSAGE = EXPECTED_MSG
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS);
 END @

-- Test the assert_boolean_null without null.
CREATE OR REPLACE PROCEDURE TEST_BOOLEAN_11()
 BEGIN
  DECLARE ACTUAL_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
  DECLARE EXPECTED_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
  DECLARE VALUE BOOLEAN;

  SET EXPECTED_MSG = 'The given value is "NOT NULL"';
  SET VALUE = TRUE;
  CALL DB2UNIT.ASSERT_BOOLEAN_NULL(VALUE);
  CALL DB2UNIT.BACK_TO_EXECUTING();

  SELECT MESSAGE INTO ACTUAL_MSG
    FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS
    WHERE DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS);

  DELETE FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS
    WHERE MESSAGE = EXPECTED_MSG
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS);
  DELETE FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS
    WHERE MESSAGE = 'BOOLEAN_NULL'
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS);

  CALL DB2UNIT.ASSERT_STRING_EQUALS(EXPECTED_MSG, ACTUAL_MSG);
 END @

-- Test the assert_boolean_not_null with not null.
CREATE OR REPLACE PROCEDURE TEST_BOOLEAN_12()
 BEGIN
  DECLARE ACTUAL_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
  DECLARE EXPECTED_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
  DECLARE VALUE BOOLEAN;

  SET EXPECTED_MSG = 'Message check';
  INSERT INTO DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS (DATE, EXECUTION_ID,
    TEST_NAME, MESSAGE) VALUES (CURRENT TIMESTAMP, 0, '', EXPECTED_MSG);
  SET VALUE = TRUE;
  CALL DB2UNIT.ASSERT_BOOLEAN_NOT_NULL(VALUE);
  CALL DB2UNIT.BACK_TO_EXECUTING();

  SELECT MESSAGE INTO ACTUAL_MSG
    FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS
    WHERE DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS);

  CALL DB2UNIT.ASSERT_STRING_EQUALS(EXPECTED_MSG, ACTUAL_MSG);
  DELETE FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS
    WHERE EXECUTION_ID = 0
    AND MESSAGE = EXPECTED_MSG
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS);
 END @

-- Test the assert_boolean_not_null without not null.
CREATE OR REPLACE PROCEDURE TEST_BOOLEAN_13()
 BEGIN
  DECLARE ACTUAL_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
  DECLARE EXPECTED_MSG ANCHOR DB2UNIT_2_BETA.REPORT_TESTS.MESSAGE;
  DECLARE VALUE BOOLEAN;

  SET EXPECTED_MSG = 'The given value is "NULL"';
  SET VALUE = NULL;
  CALL DB2UNIT.ASSERT_BOOLEAN_NOT_NULL(VALUE);
  CALL DB2UNIT.BACK_TO_EXECUTING();

  SELECT MESSAGE INTO ACTUAL_MSG
    FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS
    WHERE DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS);

  DELETE FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS
    WHERE MESSAGE = EXPECTED_MSG
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS);
  DELETE FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS
    WHERE MESSAGE = 'BOOLEAN_NOT_NULL'
    AND DATE = (SELECT MAX(DATE) FROM DB2UNIT_ASSERTIONS_BOOLEAN.REPORT_TESTS);

  CALL DB2UNIT.ASSERT_STRING_EQUALS(EXPECTED_MSG, ACTUAL_MSG);
 END @

-- Register the suite.
CALL DB2UNIT.REGISTER_SUITE(CURRENT SCHEMA) @

