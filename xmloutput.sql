
WITH
ALL_MESSAGES (SUITE_NAME, EXECUTION_ID, TEST_NAME, ALL_MESSAGES) AS
(SELECT
  SUITE_NAME, EXECUTION_ID, TEST_NAME,
  LISTAGG(MESSAGE, '\n') WITHIN GROUP (ORDER BY DATE)
 FROM DB2UNIT_EXAMPLE.REPORT_TESTS
 GROUP BY SUITE_NAME, EXECUTION_ID, TEST_NAME
),

ERRORS (SUITE_NAME, EXECUTION_ID, TEST_NAME, ERROR_MESSAGE, ERROR_TYPE) AS
(SELECT
  SUITE_NAME, EXECUTION_ID, TEST_NAME, SUBSTR(MESSAGE, 44), SUBSTR(MESSAGE, 15, 28)
 FROM DB2UNIT_EXAMPLE.REPORT_TESTS
 WHERE FINAL_STATE IS NULL
 AND TEST_NAME IN (
  SELECT TEST_NAME
  FROM DB2UNIT_EXAMPLE.REPORT_TESTS
  WHERE FINAL_STATE = 'Error'
 )
 AND MESSAGE IS NOT NULL AND MESSAGE <> ''
),

FAIL_INFO (SUITE_NAME, EXECUTION_ID, TEST_NAME, DATE) AS
(SELECT
  SUITE_NAME, EXECUTION_ID, TEST_NAME, DATE
 FROM DB2UNIT_EXAMPLE.REPORT_TESTS
 WHERE FINAL_STATE = 'Failed'
),

FAIL_ROWS (SUITE_NAME, EXECUTION_ID, TEST_NAME, MESSAGE, RANK) AS
(SELECT
  R.SUITE_NAME, R.EXECUTION_ID, R.TEST_NAME, MESSAGE,
  ROW_NUMBER() OVER(PARTITION BY R.TEST_NAME)
 FROM DB2UNIT_EXAMPLE.REPORT_TESTS R JOIN FAIL_INFO I
 ON (R.SUITE_NAME = I.SUITE_NAME AND R.EXECUTION_ID = I.EXECUTION_ID
  AND R.TEST_NAME = I.TEST_NAME)
 WHERE FINAL_STATE IS NULL
 AND MESSAGE IS NOT NULL AND MESSAGE <> ''
),

FAIL_TYPE (SUITE_NAME, EXECUTION_ID, TEST_NAME, FAIL_TYPE) AS
(SELECT
  SUITE_NAME, EXECUTION_ID, TEST_NAME, MESSAGE
 FROM FAIL_ROWS
 WHERE RANK = 1
),

FAIL_MESSAGE (SUITE_NAME, EXECUTION_ID, TEST_NAME, FAIL_MESSAGE) AS
(SELECT
  SUITE_NAME, EXECUTION_ID, TEST_NAME,
  LISTAGG(MESSAGE, '\n')
 FROM FAIL_ROWS
 WHERE RANK <> 1
 GROUP BY SUITE_NAME, EXECUTION_ID, TEST_NAME
)

SELECT
 -- SUITE_NAME, EXECUTION_ID, TEST_NAME,
 XMLELEMENT(NAME "testcase",
  XMLATTRIBUTES(
   TEST_NAME AS "name",
   '0' AS "assertions", -- TODO
   SUITE_NAME || '.' || TEST_NAME AS "classname",
   DURATION/1000 AS "time"
  ),
  CASE
   WHEN FINAL_STATE = 'Unstarted'
    THEN XMLELEMENT(NAME "skipped")
   WHEN FINAL_STATE = 'Error'
    THEN XMLELEMENT(
     NAME "error",
     XMLATTRIBUTES(
      (
       SELECT MIN(ERROR_MESSAGE)
       FROM ERRORS E JOIN DB2UNIT_2_BETA.RESULT_TESTS R
       ON (E.SUITE_NAME = R.SUITE_NAME AND E.EXECUTION_ID = R.EXECUTION_ID
       AND E.TEST_NAME = R.TEST_NAME)
      ) AS "message",
      (
       SELECT MIN(ERROR_TYPE)
       FROM ERRORS E JOIN DB2UNIT_2_BETA.RESULT_TESTS R
       ON (E.SUITE_NAME = R.SUITE_NAME AND E.EXECUTION_ID = R.EXECUTION_ID
       AND E.TEST_NAME = R.TEST_NAME)
      ) AS "type"
     )
    )
   WHEN FINAL_STATE = 'Failed'
    THEN XMLELEMENT(
     NAME "failure",
     XMLATTRIBUTES(
      (
       SELECT MIN(FAIL_MESSAGE)
       FROM FAIL_MESSAGE F JOIN DB2UNIT_2_BETA.RESULT_TESTS R
       ON (F.SUITE_NAME = R.SUITE_NAME AND F.EXECUTION_ID = R.EXECUTION_ID
       AND F.TEST_NAME = R.TEST_NAME)
      ) AS "message",
      (
       SELECT MIN(FAIL_TYPE)
       FROM FAIL_TYPE F JOIN DB2UNIT_2_BETA.RESULT_TESTS R
       ON (F.SUITE_NAME = R.SUITE_NAME AND F.EXECUTION_ID = R.EXECUTION_ID
       AND F.TEST_NAME = R.TEST_NAME)
      ) AS "type"
     )
    )
  END,
  (
   SELECT
    XMLELEMENT(NAME "system-out",
     XMLAGG(
       XMLTEXT(MESSAGE || '\n')
     )
    )
   FROM DB2UNIT_EXAMPLE.REPORT_TESTS R2
   WHERE R2.SUITE_NAME = R.SUITE_NAME
   AND R2.EXECUTION_ID = R.EXECUTION_ID
   AND R2.TEST_NAME = R.TEST_NAME
  )
 ) XML
FROM DB2UNIT_2_BETA.RESULT_TESTS R;

